name: build
on:
  push:
  schedule:
    - cron: '0 5 * * *'
  workflow_dispatch:
permissions:
  contents: read
  pages: write
  id-token: write
concurrency:
  group: pages
  cancel-in-progress: true
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python -
          echo $HOME/.local/bin >>$GITHUB_PATH
      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create false
          poetry config --list
      - name: Install TeX
        run: sudo apt-get install -yq --no-install-suggests --no-install-recommends texlive-base texlive-xetex texlive-plain-generic texlive-fonts-recommended latexmk
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/cache@v2
        with:
          path: |
            fonts
            ~/.cache/pypoetry
          key: ${{ hashFiles('poetry.lock') }}
      - name: Get fonts
        run: "[ -d fonts ] || { wget -nv -O - ${{ secrets.FONTS_URL }} | tar -xzv; }"
      - run: poetry install --no-dev
      - run: make
        env:
          PUBLONS_TOKEN: ${{ secrets.PUBLONS_TOKEN }}
      - uses: actions/upload-pages-artifact@v1
  deploy-github:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - id: deployment
        uses: actions/deploy-pages@v1
  deploy-fu:
    if: github.ref == 'refs/heads/main'
    environment:
      name: fu-pages
      url: https://page.mi.fu-berlin.de/jhermann/
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: github-pages
      - run: mkdir _site && tar -xvf artifact.tar -C _site
      - name: Deploy
        run: |
            eval $(ssh-agent -s)
            ssh-add - <<EOF
            ${{ secrets.PRIVATE_KEY }}
            EOF
            rsync -av -e 'ssh -o StrictHostKeyChecking=no' _site/ ${{ secrets.USER }}@${{ secrets.HOST }}:${{ secrets.PATH }}
