name: build
on:
  push:
  pr:
  schedule:
    - cron: '0 5 * * *'
  workflow_dispatch:
permissions:
  contents: read
  pages: write
  id-token: write
concurrency:
  group: pages
  cancel-in-progress: true
jobs:
  build:
    runs-on: ubuntu-latest
    container: texlive/texlive:latest-minimal
    steps:
      # - uses: actions/setup-python@v2
      #   with:
      #     python-version: 3.x
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python -
          echo $HOME/.local/bin >>$GITHUB_PATH
      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create false
          poetry config --list
      # - name: Install TeX
      #   run: sudo apt-get install -yq --no-install-suggests --no-install-recommends texlive-base texlive-xetex texlive-plain-generic texlive-fonts-recommended latexmk
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/cache@v2
        with:
          path: |
            fonts
            ~/.cache/pypoetry
          key: ${{ hashFiles('poetry.lock') }}
      - name: Get fonts
        run: "[ -d fonts ] || { wget -nv -O - ${{ secrets.FONTS_URL }} | tar -xzv; }"
      - run: poetry install --no-dev
      - run: make
        env:
          PUBLONS_TOKEN: ${{ secrets.PUBLONS_TOKEN }}
          FLAGS: --generated=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      - uses: actions/upload-pages-artifact@v1
  deploy-github:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - id: deployment
        uses: actions/deploy-pages@v1
